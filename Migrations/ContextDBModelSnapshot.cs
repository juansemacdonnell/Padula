// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaKinesiologia.Contexto;

#nullable disable

namespace SistemaKinesiologia.Migrations
{
    [DbContext(typeof(ContextDB))]
    partial class ContextDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaKinesiologia.Clases.Evaluacion", b =>
                {
                    b.Property<int>("IdEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvaluacion"));

                    b.Property<int>("IdKinesiologo")
                        .HasColumnType("int");

                    b.Property<int>("IdLesion")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<string>("fila1Tabla1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila1T1");

                    b.Property<string>("fila1Tabla2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila1T2");

                    b.Property<string>("fila2Tabla1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila2T1");

                    b.Property<string>("fila2Tabla2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila2T2");

                    b.Property<string>("fila3Tabla1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila3T1");

                    b.Property<string>("fila3Tabla2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila3T2");

                    b.Property<string>("fila4Tabla1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila4T1");

                    b.Property<string>("fila4Tabla2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila4T2");

                    b.Property<string>("fila5Tabla1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila5T1");

                    b.Property<string>("fila5Tabla2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila5T2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<string>("nombreTabla1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NombreTabla1");

                    b.Property<string>("nombreTabla2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NombreTabla2");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Observaciones");

                    b.HasKey("IdEvaluacion");

                    b.HasIndex("IdKinesiologo");

                    b.HasIndex("IdLesion");

                    b.ToTable("Evaluaciones");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Kinesiologo", b =>
                {
                    b.Property<int>("IdKinesiologo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKinesiologo"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.HasKey("IdKinesiologo");

                    b.ToTable("Kinesiologos");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Lesion", b =>
                {
                    b.Property<int>("IdLesion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLesion"));

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<string>("consideracionesTratamiento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Consideraciones");

                    b.Property<string>("diagnostico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Diagnostico");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<string>("medico")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Medico");

                    b.HasKey("IdLesion");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Lesiones");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Paciente", b =>
                {
                    b.Property<int>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaciente"));

                    b.Property<string>("antecedentes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Antecedente");

                    b.Property<string>("documento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Documento");

                    b.Property<int>("edad")
                        .HasColumnType("int")
                        .HasColumnName("Edad");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<string>("obraSocial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ObraSocial");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Telefono");

                    b.HasKey("IdPaciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.PlanDeGimnasio", b =>
                {
                    b.Property<int>("IdPlanGimnasio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlanGimnasio"));

                    b.Property<int>("IdKinesiologo")
                        .HasColumnType("int");

                    b.Property<int?>("IdLesion")
                        .HasColumnType("int");

                    b.Property<int?>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<string>("fila1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila1");

                    b.Property<string>("fila2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila2");

                    b.Property<string>("fila3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila3");

                    b.Property<string>("fila4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila4");

                    b.Property<string>("fila5")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Fila5");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nombre");

                    b.Property<string>("tituloColumna1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TituloColumna1");

                    b.Property<string>("tituloColumna2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TituloColumna2");

                    b.Property<string>("tituloColumna3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TituloColumna3");

                    b.HasKey("IdPlanGimnasio");

                    b.HasIndex("IdKinesiologo");

                    b.HasIndex("IdLesion");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Sesion", b =>
                {
                    b.Property<int>("IdSesion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSesion"));

                    b.Property<int>("IdKinesiologo")
                        .HasColumnType("int");

                    b.Property<int?>("IdLesion")
                        .HasColumnType("int");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha");

                    b.Property<int>("numeroSesionDelPaciente")
                        .HasColumnType("int")
                        .HasColumnName("Numero");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Observaciones");

                    b.HasKey("IdSesion");

                    b.HasIndex("IdKinesiologo");

                    b.HasIndex("IdLesion");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Evaluacion", b =>
                {
                    b.HasOne("SistemaKinesiologia.Clases.Kinesiologo", "kinesiologo")
                        .WithMany("evaluaciones")
                        .HasForeignKey("IdKinesiologo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaKinesiologia.Clases.Lesion", "lesion")
                        .WithMany("evaluaciones")
                        .HasForeignKey("IdLesion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kinesiologo");

                    b.Navigation("lesion");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Lesion", b =>
                {
                    b.HasOne("SistemaKinesiologia.Clases.Paciente", "paciente")
                        .WithMany("lesiones")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.PlanDeGimnasio", b =>
                {
                    b.HasOne("SistemaKinesiologia.Clases.Kinesiologo", "kinesiologo")
                        .WithMany("planesDeGimnasio")
                        .HasForeignKey("IdKinesiologo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaKinesiologia.Clases.Lesion", "lesion")
                        .WithMany("planesDeGimnasioParaLesion")
                        .HasForeignKey("IdLesion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SistemaKinesiologia.Clases.Paciente", "paciente")
                        .WithMany("planesDeGimnasio")
                        .HasForeignKey("IdPaciente");

                    b.Navigation("kinesiologo");

                    b.Navigation("lesion");

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Sesion", b =>
                {
                    b.HasOne("SistemaKinesiologia.Clases.Kinesiologo", "kinesiologo")
                        .WithMany("sesiones")
                        .HasForeignKey("IdKinesiologo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaKinesiologia.Clases.Lesion", "lesion")
                        .WithMany("sesiones")
                        .HasForeignKey("IdLesion");

                    b.HasOne("SistemaKinesiologia.Clases.Paciente", "paciente")
                        .WithMany("sesiones")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kinesiologo");

                    b.Navigation("lesion");

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Kinesiologo", b =>
                {
                    b.Navigation("evaluaciones");

                    b.Navigation("planesDeGimnasio");

                    b.Navigation("sesiones");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Lesion", b =>
                {
                    b.Navigation("evaluaciones");

                    b.Navigation("planesDeGimnasioParaLesion");

                    b.Navigation("sesiones");
                });

            modelBuilder.Entity("SistemaKinesiologia.Clases.Paciente", b =>
                {
                    b.Navigation("lesiones");

                    b.Navigation("planesDeGimnasio");

                    b.Navigation("sesiones");
                });
#pragma warning restore 612, 618
        }
    }
}
